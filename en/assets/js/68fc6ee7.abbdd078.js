"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[155],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(a),m=r,g=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return a?n.createElement(g,l(l({ref:t},c),{},{components:a})):n.createElement(g,l({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<o;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},6563:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return u},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return d}});var n=a(3117),r=(a(7294),a(3905));const o={id:"validate",title:"Validate",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},l=void 0,i={unversionedId:"component/middleware/validate",id:"component/middleware/validate",title:"Validate",description:"Validate middleware uses proto-gen-validate generated code for parameter validation. You could write parameter validation rules in proto files and generate codes, in order to automatically parameter validation.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/component/middleware/09-validate.md",sourceDirName:"component/middleware",slug:"/component/middleware/validate",permalink:"/en/docs/component/middleware/validate",draft:!1,editUrl:"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/component/middleware/09-validate.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{id:"validate",title:"Validate",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},sidebar:"docs",previous:{title:"Tracing",permalink:"/en/docs/component/middleware/tracing"},next:{title:"\u4f20\u8f93\u534f\u8bae",permalink:"/en/docs/category/\u4f20\u8f93\u534f\u8bae"}},s={},d=[{value:"Installation",id:"installation",level:3},{value:"Example",id:"example",level:3},{value:"Numerics",id:"numerics",level:3},{value:"Bools",id:"bools",level:4},{value:"Strings",id:"strings",level:4},{value:"Messages",id:"messages",level:4},{value:"Code Generation",id:"code-generation",level:3},{value:"Middleware",id:"middleware",level:3},{value:"HTTP",id:"http",level:4},{value:"gRPC",id:"grpc",level:4},{value:"References",id:"references",level:3}],c={toc:d};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Validate middleware uses proto-gen-validate generated code for parameter validation. You could write parameter validation rules in proto files and generate codes, in order to automatically parameter validation."),(0,r.kt)("h3",{id:"installation"},"Installation"),(0,r.kt)("p",null,"First you should install ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/envoyproxy/protoc-gen-validate"},"proto-gen-validate")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"go install github.com/envoyproxy/protoc-gen-validate@latest\n")),(0,r.kt)("p",null,"If any error appears in generation process or there are ",(0,r.kt)("inlineCode",{parentName:"p"},"// no validation rules for xxxx")," in the generated codes, you could try ",(0,r.kt)("inlineCode",{parentName:"p"},"git clone github.com/envoyproxy/protoc-gen-validate")," then run ",(0,r.kt)("inlineCode",{parentName:"p"},"make build")),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("p",null,"Here are some examples of parameter validation for several common situations, you may also refer to more examples in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/envoyproxy/protoc-gen-validate"},"proto-gen-validate")),(0,r.kt)("h3",{id:"numerics"},"Numerics"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-protobuf"},"// id must be greater than 0\nint64 id = 1 [(validate.rules).int64 = {gt: 0}];\n// age must be in the range (0, 120]\nint32 age = 2 [(validate.rules).int32 = {gt:0, lte: 120}];\n// code must be either 1, 2, or 3\nuint32 code = 3 [(validate.rules).uint32 = {in: [1,2,3]}];\n// score cannot be 0 nor 0.99\nfloat score = 1 [(validate.rules).float = {not_in: [0, 99.99]}];\n")),(0,r.kt)("h4",{id:"bools"},"Bools"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-protobuf"},"// state must be set to true\nbool state = 5 [(validate.rules).bool.const = true];\n// x cannot be set to true\nbool state = 5 [(validate.rules).bool.const = false];\n")),(0,r.kt)("h4",{id:"strings"},"Strings"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-protobuf"},'// x must be set to "/hello"\nstring path = 6 [(validate.rules).string.const = "/hello"];\n// phone must be exactly 11 characters long\nstring phone = 7 [(validate.rules).string.len = 11];\n// explain must be at least 10 characters long\nstring explain = 8 [(validate.rules).string.min_len =  10];\n// name must be between 1 and 10 characters, inclusive\nstring name = 9 [(validate.rules).string = {min_len: 1, max_len: 10}];\n// card must be a non-empty, case-insensitive hexadecimal string\nstring card = 10 [(validate.rules).string.pattern = "(?i)^[0-9a-f]+$"];\n// x must be a valid email address (via RFC 1034)\nstring email = 11 [(validate.rules).string.email = true];\n')),(0,r.kt)("h4",{id:"messages"},"Messages"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-protobuf"},"// info cannot be unset\nInfo info = 11 [(validate.rules).message.required = true];\nmessage Info {\n    string address = 1;\n}\n")),(0,r.kt)("h3",{id:"code-generation"},"Code Generation"),(0,r.kt)("p",null,"1.Directly use the ",(0,r.kt)("inlineCode",{parentName:"p"},"protoc")," command to generate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"protoc --proto_path=. \\\n           --proto_path=./third_party \\\n           --go_out=paths=source_relative:. \\\n           --validate_out=paths=source_relative,lang=go:. \\\n           xxxx.proto\n")),(0,r.kt)("p",null,"2.Add the  ",(0,r.kt)("inlineCode",{parentName:"p"},"validate")," command in Makefile"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-makefile"},".PHONY: validate\n# generate validate proto\nvalidate:\n    protoc --proto_path=. \\\n           --proto_path=./third_party \\\n           --go_out=paths=source_relative:. \\\n           --validate_out=paths=source_relative,lang=go:. \\\n           $(API_PROTO_FILES)\n")),(0,r.kt)("p",null,"Execute command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"make validate\n")),(0,r.kt)("h3",{id:"middleware"},"Middleware"),(0,r.kt)("p",null,"We can inject the validate middleware into HTTP or gRPC, and the validate middleware automatically validates the parameters according to the rules written in the proto when request entering."),(0,r.kt)("h4",{id:"http"},"HTTP"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'httpSrv := http.NewServer(\n    http.Address(":8000"),\n    http.Middleware(\n        validate.Validator(),\n    ))\n')),(0,r.kt)("h4",{id:"grpc"},"gRPC"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'grpcSrv := grpc.NewServer(\n    grpc.Address(":9000"),\n    grpc.Middleware(\n        validate.Validator(),\n    ))\n')),(0,r.kt)("h3",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/go-kratos/examples/tree/main/validate"},"https://github.com/go-kratos/examples/tree/main/validate"))))}u.isMDXComponent=!0}}]);