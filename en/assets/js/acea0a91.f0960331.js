"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4647],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,m=d["".concat(l,".").concat(g)]||d[g]||s[g]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3516:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return s},frontMatter:function(){return a},metadata:function(){return p},toc:function(){return c}});var r=n(3117),o=(n(7294),n(3905));const a={id:"openapi",title:"OpenAPI Swagger",description:"OpenAPI Swagger",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},i=void 0,p={unversionedId:"guide/openapi",id:"guide/openapi",title:"OpenAPI Swagger",description:"OpenAPI Swagger",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/guide/02-openapi.md",sourceDirName:"guide",slug:"/guide/openapi",permalink:"/en/docs/guide/openapi",draft:!1,editUrl:"https://github.com/go-kratos/go-kratos.dev/edit/main/i18n/en/docusaurus-plugin-content-docs/current/guide/02-openapi.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"openapi",title:"OpenAPI Swagger",description:"OpenAPI Swagger",keywords:["Go","Kratos","Toolkit","Framework","Microservices","Protobuf","gRPC","HTTP"]},sidebar:"docs",previous:{title:"Protobuf Guideline",permalink:"/en/docs/guide/api-protobuf"},next:{title:"Dependency Injection",permalink:"/en/docs/guide/wire"}},l={},c=[{value:"Use protoc to generate openapi.yaml",id:"use-protoc-to-generate-openapiyaml",level:3},{value:"Installation",id:"installation",level:4},{value:"Generation",id:"generation",level:4},{value:"Usage",id:"usage",level:4}],u={toc:c};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"use-protoc-to-generate-openapiyaml"},"Use protoc to generate openapi.yaml"),(0,o.kt)("p",null,"The new project Makefile has been integrated by default with the commands associated with generating openapi.yaml, and here's how to use them"),(0,o.kt)("h4",{id:"installation"},"Installation"),(0,o.kt)("p",null,"First, install the protoc plug-in globally."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"go install github.com/google/gnostic/cmd/protoc-gen-openapi@latest\n")),(0,o.kt)("h4",{id:"generation"},"Generation"),(0,o.kt)("p",null,"If you're using kratos-layout, execute this command directly to generate."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"make api\n")),(0,o.kt)("p",null,"Or you can use the protoc command directly at the root of the project, note that modifying the final proto file path of the command is the actual path"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"protoc --proto_path=. \\\n        --proto_path=./third_party \\\n        --openapi_out=fq_schema_naming=true,default_response=false:. \\\n        api/helloworld/v1/greeter.proto\n")),(0,o.kt)("h4",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Once the above command has been executed successfully, the corresponding openapi.yaml file will be generated in the directory where your proto file is located.\nYou can import it into any platform that supports the Open API specification for browsing, such as:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/swagger-api/swagger-ui"},"Swagger UI")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://editor.swagger.io/"},"Swagger Editor")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Redocly/redoc"},"ReDoc")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/YMFE/yapi"},"YApi")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.postman.com/"},"Postman"))))}s.isMDXComponent=!0}}]);